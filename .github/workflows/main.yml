name: Docker Build and Deploy

on:
  push:
    branches:
      - main  # main 브랜치에 푸시 시 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # GitHub에서 사용할 실행 환경
    
    steps:
    # 1. 리포지토리 체크아웃
    - name: Checkout repository
      uses: actions/checkout@v3
      
    # 2. Docker 환경
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    # 3. Docker 로그인 (Docker Hub)
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}  # GitHub Secrets에서 사용자명 가져오기
        password: ${{ secrets.DOCKERHUB_PASSWORD }}  # GitHub Secrets에서 비밀번호 가져오기
        
    # 4. Docker 이미지 빌드
    - name: Build Docker image
      run: |
        pwd && ls
        docker build -t p2nutz/backend:${{ github.run_number }} ./backend
        docker build -t p2nutz/frontend:${{ github.run_number }} ./frontend
        docker tag p2nutz/frontend:${{ github.run_number }} p2nutz/frontend:latest
        docker tag p2nutz/backend:${{ github.run_number }} p2nutz/backend:latest
        
    # 5. Docker Hub에 이미지 푸시
    - name: Push Docker image to Docker Hub
      run: |
        docker push p2nutz/backend:${{ github.run_number }}
        docker push p2nutz/frontend:${{ github.run_number }}
        docker push p2nutz/backend:latest
        docker push p2nutz/frontend:latest
        
    # 6. SSH 설정
    - name: Set up SSH keys
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        
    # 7. EC2 배포
    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@54.180.229.165 "sudo docker compose up -d"
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
